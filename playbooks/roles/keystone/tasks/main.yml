---

- name: Disable the keystone service from starting automatically after installation
  script: disable_auto_start_keystone_service.sh

- name: install keystone packages
  apt: pkg={{ item }} update_cache=yes cache_valid_time=3600
  with_items:
    - keystone
    - apache2
    - libapache2-mod-wsgi
    - memcached
    - python-memcache

- name: edit keystone conf file
  template: src=keystone.conf.j2 dest=/etc/keystone/keystone.conf

- name: Populate the Identity service database
  script: keystone_db_sync.sh

- name: edit apache conf file
  template: src=apache2.conf.j2 dest=/etc/apache2/apache2.conf

- name: create wsgi conf file
  copy: src=wsgi-keystone.conf dest=/etc/apache2/sites-available/wsgi-keystone.conf

- name: Enable the Identity service virtual hosts
  file: src=/etc/apache2/sites-available/wsgi-keystone.conf dest=/etc/apache2/sites-enabled/wsgi-keystone.conf state=link

- name: Restart the Apache HTTP server
  service: name=apache2 state=restarted

- name: remove the SQLite database file
  file: path=/var/lib/keystone/keystone.db state=absent

- name: Wait for keystone startup
  uri:
    url: "http://{{ api_host }}:35357"
    status_code: 300
  register: wait_keystone_result
  until: wait_keystone_result.status == 300
  retries: 60
  delay: 1

- name: create the service entity and API endpoint
  script: create_service_entity_and_api_endpoint.sh {{ api_host }}
  environment: "{{ temp_auth_token }}"

- name: Create default domain
  os_keystone_domain:
    name: "default"
    description: "Default Domain"
  register: os_default_domain
  environment: "{{ temp_auth_token }}"

- name: Create admin project
  os_project:
    name: admin
    description: "Admin Project"
    domain_id: "{{ os_default_domain.domain.id }}"
    enabled: True
  register: os_admin_project
  environment: "{{ temp_auth_token }}"

- name: Create service project
  os_project:
    name: admin
    description: "Service Project"
    domain_id: "{{ os_default_domain.domain.id }}"
    enabled: True
  register: os_service_project
  environment: "{{ temp_auth_token }}"

- name: Create demo project
  os_project:
    name: demo
    description: "Demo Project"
    domain_id: "{{ os_default_domain.domain.id }}"
    enabled: True
  register: os_demo_project
  environment: "{{ temp_auth_token }}"

- name: Create admin user
  os_user:
    name: admin
    password: "{{ ADMIN_PASS }}"
    domain: "{{ os_default_domain.domain.id }}"
    default_project: "{{ os_admin_project.project.id }}"
  register: os_admin_user
  environment: "{{ temp_auth_token }}"

- name: Create demo user
  os_user:
    name: demo
    password: "{{ DEMO_PASS }}"
    domain: "{{ os_default_domain.domain.id }}"
    default_project: "{{ os_demo_project.project.id }}"
  register: os_demo_user
  environment: "{{ temp_auth_token }}"

- name: Create admin role
  os_keystone_role:
    state: present
    name: admin
  register: os_admin_role
  environment: "{{ temp_auth_token }}"

- name: Create user role
  os_keystone_role:
    state: present
    name: user
  register: os_user_role
  environment: "{{ temp_auth_token }}"

- name: Assign admin role to admin
  os_user_role:
    user: "{{ os_admin_user.user.id }}"
    role: "{{ os_admin_role.role.id }}"
    project: "{{ os_admin_project.project.id }}"

- name: Assign user role to user
  os_user_role:
    user: "{{ os_demo_user.user.id }}"
    role: "{{ os_user_role.role.id }}"
    project: "{{ os_demo_project.project.id }}"
